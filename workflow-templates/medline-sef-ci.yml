name: Medline Terraform Environment As Code Delivery
on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  security:
        runs-on: ubuntu-latest
        steps:           

          # Checkout the repository to the GitHub Actions runner
          - name: Checkout
            uses: actions/checkout@v3
      
      
          - name: Run Prisma Cloud
            id: prisma-cloud
            uses: bridgecrewio/checkov-action@master
            with:
              api-key: ${{ secrets.BC_API_KEY }}
      
            # Configure Azure CLI
          #- name: Login via Azure CLI
           # uses: azure/login@v1
            #with:
             # creds: ${{ secrets.AZURE_CREDENTIALS }}
      
          # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v1
            with:
              cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
          # Change Directory
          - name: Terraform Check Directory listings
            run:  ls -ltr
      
          # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
          - name: Terraform Init
            run: terraform init #-backend-config "access_key=${{ secrets.TF_ACCESS_KEY }}"
      
          # Checks that all Terraform configuration files adhere to a canonical format
          - name: Terraform Format
            run: terraform fmt -check
      
          # Generates an execution plan for Terraform
          - name: Terraform Plan
            run: terraform plan #-input=false
      
            # On push to "main", build or change infrastructure according to Terraform configuration files
            # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
          - name: Terraform Apply
            if: github.ref == 'refs/heads/main' && github.event_name == 'push'
            run: terraform apply -auto-approve -input=false
